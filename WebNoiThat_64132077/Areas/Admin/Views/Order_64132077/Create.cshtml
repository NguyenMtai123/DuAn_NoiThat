@model WebNoiThat_64132077.Models.EF.Order

@{
    ViewBag.Title = "Thêm Đơn Hàng";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section header{
    <div class="content-header">
        <div class="row mb-3">
            <div class="col-sm-6">
                <h3 class="m-0">Thêm đơn hàng</h3>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a style="text-decoration: none" href="/Admin/Home_64132077">Home</a></li>
                    <li class="breadcrumb-item"><a style="text-decoration: none" href="/Admin/Order_64132077">Đơn hàng</a></li>
                    <li class="breadcrumb-item active">Thêm đơn hàng</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div>
}
@using (Html.BeginForm("Create", "Order_64132077", FormMethod.Post, new { @class = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                @Html.TextBoxFor(model => model.Code, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.OrderDate, "Ngày lập hóa đơn")
                @Html.TextBoxFor(model => model.OrderDate, new { @class = "form-control", @type = "date" })
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Khách hàng")
                <div class="d-flex align-items-center">
                    @Html.DropDownList("CustomerID", null, "-- Chọn khách hàng --", new { @class = "form-control" })
                    <!-- Nút Thêm khách hàng -->
                    <a href="#" class="btn btn-outline-success ml-2" title="Thêm khách hàng mới" data-toggle="modal" data-target="#modal-them-khach-hang">
                        <i class="fas fa-plus"></i>
                    </a>

                </div>
            </div>
        </div>



        @*<div class="form-group">
                //@Html.Label("Nhân viên lập đơn")
                //@Html.DropDownList("EmployeeName", null, "-- Chọn nhân viên --", new { @class = "form-control" })
                //
            </div>*@
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.DeliveryDate, "Ngày giao hàng")
                @Html.TextBoxFor(model => model.DeliveryDate, new { @class = "form-control", @type = "date" })
            </div>
        </div>
    </div>

    <hr />

    <h4>Chi tiết mặt hàng</h4>
    <table class="table table-bordered" id="productTable">
        <thead>
            <tr>
                <th>Sản phẩm</th>
                <th>Số lượng</th>
                <th>Đơn giá</th>
                <th>Thành tiền</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="productRows">
            <!-- Dòng đầu tiên -->
            <tr>
                <td>
                    <select name="ProductIDs" class="form-control product-select">
                        <option value="">-- Chọn sản phẩm --</option>
                        @foreach (var p in ViewBag.Products)
                        {
                            <option value="@p.ID" data-price="@p.Price">@p.Name</option>
                        }
                    </select>
                </td>
                <td><input type="number" name="Quantities" class="form-control quantity" min="1" value="1" /></td>
                <td><input type="text" class="form-control price" readonly /></td>
                <td><input type="text" class="form-control amount" readonly /></td>
                <td><button type="button" class="btn btn-danger remove-row">Xóa</button></td>
            </tr>
        </tbody>
    </table>
    <button type="button" id="addRow" class="btn btn-success">+ Thêm mặt hàng</button>

    <div class="form-group mt-3">
        <label for="TotalAmount">Tổng tiền</label>
        @Html.TextBoxFor(model => model.TotalAmount, new { @class = "form-control", @readonly = "readonly", id = "TotalAmount" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Note, "Ghi chú")
        @Html.TextAreaFor(model => model.Note, new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Lưu Đơn Hàng</button>
}
<div class="modal fade" id="modal-them-khach-hang">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="form-them-khach-hang">
                <div class="modal-header">
                    <h5 class="modal-title">Thêm khách hàng mới</h5>
                    <button type="button" class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="form-group">
                        <label>Tên tài khoản</label>
                        <input type="text" name="Username" id="Username" class="form-control" readonly />
                    </div>
                    <div class="form-group">
                        <label>Mật khẩu</label>
                        <input type="text" name="Password" class="form-control" value="123456" readonly />
                    </div>
                    <div class="form-group">
                        <label>Tên khách hàng</label>
                        <input type="text" name="FullName" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="Email" class="form-control" required />
                    </div>
                    <div class="form-group">
                        <label>Địa chỉ</label>
                        <input type="text" name="Address" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Số điện thoại</label>
                        <input type="text" name="Phone" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Giới tính</label>
                        <select name="Gender" class="form-control">
                            <option value="true">Nam</option>
                            <option value="false">Nữ</option>
                        </select>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Lưu</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section script {
    <script>
        function calculateAmount(row) {
            var quantity = parseFloat($(row).find('.quantity').val()) || 0;
            var price = parseFloat($(row).find('.price').val()) || 0;
            var amount = quantity * price;
            $(row).find('.amount').val(amount.toFixed(0));
            calculateTotal();
        }

        function calculateTotal() {
            var total = 0;
            $('#productRows .amount').each(function () {
                total += parseFloat($(this).val()) || 0;
            });
            $('#TotalAmount').val(total.toFixed(0));
        }

        $(document).ready(function () {
            // Cập nhật giá khi chọn sản phẩm
            $('#productTable').on('change', '.product-select', function () {
                var price = $(this).find(':selected').data('price');
                var row = $(this).closest('tr');
                row.find('.price').val(price);
                calculateAmount(row);
            });

            // Cập nhật lại thành tiền khi thay đổi số lượng
            $('#productTable').on('input', '.quantity', function () {
                var row = $(this).closest('tr');
                calculateAmount(row);
            });

            // Thêm dòng
            $('#addRow').click(function () {
                var newRow = $('#productRows tr:first').clone();
                newRow.find('select').val('');
                newRow.find('.price').val('');
                newRow.find('.amount').val('');
                newRow.find('.quantity').val(1); // Gán mặc định số lượng = 1
                $('#productRows').append(newRow);
            });


            // Xóa dòng
            $('#productTable').on('click', '.remove-row', function () {
                if ($('#productRows tr').length > 1) {
                    $(this).closest('tr').remove();
                    calculateTotal();
                }
            });
        });
    </script>
    <script>
        // Tự động sinh username: customer1, customer2, ...
        $('#modal-them-khach-hang').on('show.bs.modal', function () {
            $.get("/Admin/Order_64132077/GetNextUsername", function (res) {
                $('#Username').val(res.username);
            });
        });

        // Submit form
        $('#form-them-khach-hang').submit(function (e) {
            e.preventDefault();
            var formData = $(this).serialize();
            $.post("/Admin/Order_64132077/CreateCustomer", formData, function (res) {
                if (res.success) {
                    $('#modal-them-khach-hang').modal('hide');
                    Swal.fire('Thành công', res.message, 'success');
                    // Có thể reload lại danh sách đơn hàng nếu cần
                } else {
                    Swal.fire('Lỗi', res.message, 'error');
                }
            });
        });
    </script>
}
